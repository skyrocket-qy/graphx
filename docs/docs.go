// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "API Support",
            "url": "http://www.swagger.io/support",
            "email": "support@swagger.io"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/relation/check": {
            "post": {
                "description": "Check if a relation link exists between two entities",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Relation"
                ],
                "summary": "Check if a relation link exists",
                "responses": {
                    "200": {
                        "description": "Relation link exists",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/domain.ErrResponse"
                        }
                    },
                    "403": {
                        "description": "Relation link does not exist",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/domain.ErrResponse"
                        }
                    }
                }
            }
        },
        "/relation/clear-all-relations": {
            "post": {
                "description": "Clear all relations in the system",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Relation"
                ],
                "summary": "Clear all relations",
                "responses": {
                    "200": {
                        "description": "All relations cleared",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/domain.ErrResponse"
                        }
                    }
                }
            }
        },
        "/relation/get-all-relations": {
            "get": {
                "description": "Get a list of all relations",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Relation"
                ],
                "summary": "Get all relations",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/domain.DataResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/domain.ErrResponse"
                        }
                    }
                }
            }
        },
        "/relation/path": {
            "post": {
                "description": "Get the shortest path between two entities in a relation graph",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Relation"
                ],
                "summary": "Get the shortest path between two entities in a relation graph",
                "responses": {
                    "200": {
                        "description": "Shortest path between entities",
                        "schema": {
                            "$ref": "#/definitions/domain.DataResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/domain.ErrResponse"
                        }
                    },
                    "403": {
                        "description": "No path found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/domain.ErrResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "domain.DataResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/domain.Relation"
                    }
                }
            }
        },
        "domain.ErrResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                }
            }
        },
        "domain.Relation": {
            "type": "object",
            "properties": {
                "object_name": {
                    "type": "string"
                },
                "object_namespace": {
                    "type": "string"
                },
                "relation": {
                    "type": "string"
                },
                "subject_name": {
                    "type": "string"
                },
                "subject_namespace": {
                    "type": "string"
                },
                "subject_relation": {
                    "type": "string"
                }
            }
        }
    },
    "securityDefinitions": {
        "BasicAuth": {
            "type": "basic"
        }
    },
    "externalDocs": {
        "description": "OpenAPI",
        "url": "https://swagger.io/resources/open-api/"
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "",
	BasePath:         "/api/v1",
	Schemes:          []string{},
	Title:            "Swagger API",
	Description:      "",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
